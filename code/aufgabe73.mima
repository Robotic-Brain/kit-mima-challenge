; Christian Englert
; MatrNr.: 2425976
; 7.3)

; inputs
in: DS 0xdeadbe
out: DS 0

; local variables
_mask: DS 0xdead
_i: DS 0xbeef

; constants
C_MAX: DS 24

; Function reverse
; Mirrors one word (24bit) such that the folowing conditions hold
;    |reverse(w)| = |w|
;    reverse(w)[i] = w[|w| - i - 1]      (for 0 <= i <= |w|)
; input: in
; output: out
; side-effects: clobbers mask, i
START:
  LDC 0
  STV out     ; out = 0
  STV _i      ; _i = 0

  LDC 1
  STV _mask   ; _mask = 1

loop:
  LDV in
  AND _mask
  ADD out
  RAR
  RAR
  STV out     ; out = (out + (in & _mask)) >> 2
  
  LDV _mask
  RAR
  STV _mask   ; _mask = _mask >> 1

  LDC 1
  ADD _i
  STV _i     ; _i++

  EQL C_MAX
  JMN finish ; if (_i == C_MAX) break
  JMP loop

finish:
  LDV out
  RAR
  STV out   ; out = out >> 1

end:
  HALT
